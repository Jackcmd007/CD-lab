#include<stdio.h>
#include<stdlib.h>
#include<string.h>
char infix[50],postfix[50];
int stack[50],top = -1;
int pop()
{
	return(stack[top--]);
};
int precedence(char symbol)
{
	switch(symbol)
	{
		case '(':
			return 0;
		case '+':
		case '-':
			return 1;
		case '*':
		case '/':
			return 2;
		case '^':
			return 3;
		default:
			return 0;
	}
}
void push(int symbol)
{
	top=top+1;
	stack[top]=symbol;
};
void topostfix()
{
	int i,t=0,length;
	char next;
	char symbol;
	length = strlen(infix);
	for(i=length;i>=0;i--)
	{
		infix[i+1]=infix[i];
	}
	infix[0]='(';
	infix[length+1]=')';
	printf("The infix expressiom is : %s",infix);
	for(i=0;i<=length+1;i++)
	{
		symbol=infix[i];
		switch(symbol)
		{
			case '(':
				push(symbol);
				break;
			case ')':
			while((next=pop())!='(')
			{
				postfix[t]=next;
				t++;
			}
			break;
			case '+':
			case '-':
			case '*':
			case '/':
			case '^':
			while(precedence(stack[top])>=precedence(symbol))
			{	
				postfix[t++]=pop();
			}
			push(symbol);
			break;
			default:
				postfix[t]=symbol;
				t++;
		}
	}
};
int main()
{
	printf("Enter the infix expression : ");
	scanf("%s",infix);
	topostfix();
		printf("\n\nThe postfix expression is : %s ",postfix);			
		
	return 0;
}
















